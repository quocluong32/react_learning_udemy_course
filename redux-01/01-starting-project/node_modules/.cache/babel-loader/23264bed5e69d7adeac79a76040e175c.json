{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return { ...state,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["C:/Users/Quoc Luong/Desktop/udemy/redux-01/01-starting-project/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","counterReducer","state","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAE,SADE;AAERH,EAAAA,YAAY,EAAEA;AAFN,CAAD,CAAX;;AAKA,MAAMI,cAAc,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACrD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHN,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACE,MAD7B;AAEHN,MAAAA,WAAW,EAAEG,KAAK,CAACH;AAFhB,KAAP;AAIH;;AAED,MAAII,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC7B,WAAO;AACHN,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB,CADtB;AAEHC,MAAAA,WAAW,EAAEG,KAAK,CAACH;AAFhB,KAAP;AAIH;;AAED,MAAII,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,WAAO,EACH,GAAGF,KADA;AAEHH,MAAAA,WAAW,EAAE,CAACG,KAAK,CAACH;AAFjB,KAAP;AAIH;;AAED,SAAOG,KAAP;AACH,CAvBD;;AAyBA,MAAMI,KAAK,GAAGX,WAAW,CAACM,cAAD,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore } from 'redux';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = { counter: 0, showCounter: true };\r\n\r\ncreateSlice({\r\n    name: 'counter',\r\n    initialState: initialState\r\n})\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n    if (action.type === 'increment') {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'decrement') {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.showCounter\r\n        }\r\n    }\r\n\r\n    if (action.type === 'toggle') {\r\n        return {\r\n            ...state,\r\n            showCounter: !state.showCounter\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}