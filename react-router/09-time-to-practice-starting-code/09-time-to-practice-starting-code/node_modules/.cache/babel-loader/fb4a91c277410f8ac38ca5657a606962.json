{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quoc Luong\\\\Desktop\\\\udemy\\\\react-router\\\\09-time-to-practice-starting-code\\\\09-time-to-practice-starting-code\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport Comments from '../components/comments/Comments';\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport useHttp from '../hooks/use-http';\nimport { getSingleQuote } from '../lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  const {\n    quoteId\n  } = params;\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!loadedQuote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No Quote Found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), console.log(loadedQuote.text), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"cv1Iusq+I4KeC6i/PAPIiViCiFg=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/Quoc Luong/Desktop/udemy/react-router/09-time-to-practice-starting-code/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"names":["React","useEffect","useParams","Route","Link","useRouteMatch","Comments","HighlightedQuote","LoadingSpinner","useHttp","getSingleQuote","QuoteDetail","match","params","sendRequest","status","data","loadedQuote","error","quoteId","text","author","console","log","path","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,KAAK,GAAGP,aAAa,EAA3B;AACA,QAAMQ,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AAACY,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,WAA5B;AAAyCC,IAAAA;AAAzC,MAAkDT,OAAO,CAACC,cAAD,EAAiB,IAAjB,CAA/D;AACA,QAAM;AAACS,IAAAA;AAAD,MAAYN,MAAlB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,WAAW,CAACK,OAAD,CAAX;AACH,GAFQ,EAEN,CAACL,WAAD,EAAcK,OAAd,CAFM,CAAT;;AAIA,MAAIJ,MAAM,KAAK,SAAf,EAA0B;AACtB,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,6BACH,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AAGH;;AAED,MAAIG,KAAJ,EAAW;AACP,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAI,CAACD,WAAL,EAAkB;AACd,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,WAAW,CAACG,IAApC;AAA0C,MAAA,MAAM,EAAEH,WAAW,CAACI;AAA9D;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKC,OAAO,CAACC,GAAR,CAAYN,WAAW,CAACG,IAAxB,CAFL,eAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAER,KAAK,CAACY,IAAK,EAA3B;AAA8B,MAAA,KAAK,MAAnC;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEZ,KAAK,CAACa,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEb,KAAK,CAACY,IAAK,WAA3B;AAAuC,MAAA,KAAK,MAA5C;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArCD;;GAAMb,W;UACYN,a,EACCH,S,EACyCO,O;;;KAHtDE,W;AAuCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n    const {sendRequest, status, data: loadedQuote, error} = useHttp(getSingleQuote, true);\r\n    const {quoteId} = params;\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if (status === 'pending') {\r\n        return <p className=\"centered\">\r\n            <LoadingSpinner />\r\n        </p>\r\n    }\r\n\r\n    if (error) {\r\n        return <p className=\"centered\">{error}</p>\r\n    }\r\n    if (!loadedQuote) {\r\n        return <p className='centered'>No Quote Found.</p>\r\n    }\r\n    return (\r\n        <div>\r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n            {console.log(loadedQuote.text)}\r\n            <Route path={`${match.path}`} exact>\r\n                <div className=\"centered\">\r\n                    <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n\r\n            <Route path={`${match.path}/comments`} exact>\r\n                <Comments />\r\n            </Route>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}