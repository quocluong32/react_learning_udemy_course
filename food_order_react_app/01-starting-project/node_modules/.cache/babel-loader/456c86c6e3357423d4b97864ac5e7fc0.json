{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quoc Luong\\\\Desktop\\\\udemy\\\\food_order_react_app\\\\01-starting-project\\\\src\\\\componensts\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport Cards from '../UI/Cards';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-70333-default-rtdb.firebaseio.com/meals');\n      if (!response.ok) throw new Error(\"Something went wrong\");\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setError(error.message);\n    }\n  }, []);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Cards, {\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.mealsLoading,\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 8\n  }, this);\n};\n\n_s(AvailableMeals, \"lpPRFYL8ceDwto6m6kA7D71aHFs=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/Quoc Luong/Desktop/udemy/food_order_react_app/01-starting-project/src/componensts/Meals/AvailableMeals.js"],"names":["React","useEffect","useState","classes","Cards","MealItem","DUMMY_MEALS","id","name","description","price","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","message","mealsList","map","meal","mealsLoading"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport classes from './AvailableMeals.module.css';\r\nimport Cards from '../UI/Cards';\r\nimport MealItem from './MealItem/MealItem';\r\n\r\nconst DUMMY_MEALS = [\r\n    {\r\n      id: 'm1',\r\n      name: 'Sushi',\r\n      description: 'Finest fish and veggies',\r\n      price: 22.99,\r\n    },\r\n    {\r\n      id: 'm2',\r\n      name: 'Schnitzel',\r\n      description: 'A german specialty!',\r\n      price: 16.5,\r\n    },\r\n    {\r\n      id: 'm3',\r\n      name: 'Barbecue Burger',\r\n      description: 'American, raw, meaty',\r\n      price: 12.99,\r\n    },\r\n    {\r\n      id: 'm4',\r\n      name: 'Green Bowl',\r\n      description: 'Healthy...and green...',\r\n      price: 18.99,\r\n    },\r\n  ];\r\n\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    const fetchMeals = async () => {\r\n      const response = await fetch('https://react-70333-default-rtdb.firebaseio.com/meals');\r\n      if (!response.ok)\r\n        throw new Error(\"Something went wrong\");\r\n      const responseData = await response.json();\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          description: responseData[key].description,\r\n          price: responseData[key].price\r\n        })\r\n      }\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    try {\r\n      fetchMeals();\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setError(error.message);\r\n    }\r\n    \r\n  },[]);\r\n\r\n    const mealsList = meals.map(meal => \r\n        <MealItem \r\n            id={meal.id}\r\n            key={meal.id} \r\n            name={meal.name} \r\n            description={meal.description} \r\n            price={meal.price}   />);\r\n    return (\r\n       <section className={classes.meals}>\r\n            <Cards >\r\n            {isLoading? <p className={classes.mealsLoading}>Loading...</p>: ''}\r\n\r\n                <ul>\r\n                    {mealsList}\r\n                </ul>\r\n            </Cards>\r\n           \r\n       </section>\r\n    );\r\n};\r\n\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}