{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quoc Luong\\\\Desktop\\\\udemy\\\\food_order_react_app\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const exitingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const exitingCartItem = state.items[exitingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (exitingCartItem) {\n      updatedItem = { ...exitingCartItem,\n        amount: exitingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[exitingCartItemIndex] = updatedItem;\n    } else {\n      updatedItem = { ...action.item\n      };\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Quoc Luong/Desktop/udemy/food_order_react_app/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","exitingCartItemIndex","findIndex","id","exitingCartItem","updatedItem","updatedItems","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACvB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,oBAAoB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAtD,CAA7B;AACA,UAAMC,eAAe,GAAGV,KAAK,CAACH,KAAN,CAAYU,oBAAZ,CAAxB;AAEA,QAAII,WAAJ;AACA,QAAIC,YAAJ;;AAEA,QAAGF,eAAH,EAAoB;AAChBC,MAAAA,WAAW,GAAG,EACV,GAAGD,eADO;AAEVJ,QAAAA,MAAM,EAAEI,eAAe,CAACJ,MAAhB,GAAyBL,MAAM,CAACG,IAAP,CAAYE;AAFnC,OAAd;AAIAM,MAAAA,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAf;AACAe,MAAAA,YAAY,CAACL,oBAAD,CAAZ,GAAqCI,WAArC;AACH,KAPD,MAOO;AACHA,MAAAA,WAAW,GAAG,EAAC,GAAGV,MAAM,CAACG;AAAX,OAAd;AACAQ,MAAAA,YAAY,GAAGZ,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;AACH;;AACD,WAAO;AACHP,MAAAA,KAAK,EAAEe,YADJ;AAEHd,MAAAA,WAAW,EAAEK;AAFV,KAAP;AAIH;;AACD,SAAOP,gBAAP;AACH,CA3BD;;AA6BA,MAAMkB,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAoCvB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAApD;;AAEA,QAAMsB,oBAAoB,GAAId,IAAD,IAAU;AACnCa,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,KAAP;AAAcE,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMe,yBAAyB,GAAIV,EAAD,IAAQ;AACtCQ,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,QAAP;AAAiBO,MAAAA,EAAE,EAAEA;AAArB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMW,WAAW,GAAG;AAChBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADD;AAEhBC,IAAAA,WAAW,EAAEkB,SAAS,CAAClB,WAFP;AAGhBuB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CArBD;;GAAMT,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === 'ADD') {\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const exitingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\r\n        const exitingCartItem = state.items[exitingCartItemIndex];\r\n\r\n        let updatedItem;\r\n        let updatedItems;\r\n\r\n        if(exitingCartItem) {\r\n            updatedItem = {\r\n                ...exitingCartItem,\r\n                amount: exitingCartItem.amount + action.item.amount\r\n            };\r\n            updatedItems = [...state.items];\r\n            updatedItems[exitingCartItemIndex] = updatedItem;\r\n        } else {\r\n            updatedItem = {...action.item};\r\n            updatedItems = state.items.concat(action.item);\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n        };\r\n    }\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = props => {\r\n    const [cartState, dispatchCartAction]  =  useReducer(cartReducer, defaultCartState);\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({type: 'ADD', item: item});\r\n    };\r\n\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({type: 'REMOVE', id: id});\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    }\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}