{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quoc Luong\\\\Desktop\\\\udemy\\\\use-effect\\\\01-starting-project\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserloogedInInformation = localStorage.getItem('isLoggedIn');\n\n    if (storedUserloogedInInformation === '1') {\n      setIsLoggedIn(true);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AuthContextProvider, \"2ynArPFneQ6HNwaWVZQpQgcdibg=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Quoc Luong/Desktop/udemy/use-effect/01-starting-project/src/store/auth-context.js"],"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","storedUserloogedInInformation","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAIH,KAAK,CAACI,aAAN,CAAoB;AACrCC,EAAAA,UAAU,EAAE,KADyB;AAErCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFmB;AAGrCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHK,CAApB,CAArB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA+BX,QAAQ,CAAC,KAAD,CAA7C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;AACA,QAAIF,6BAA6B,KAAK,GAAtC,EAA2C;AACzCD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAJW,CAKZ;;AACD,GANM,EAMJ,EANI,CAAT;;AAOA,QAAMI,aAAa,GAAG,MAAM;AACxBF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AAEAL,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAJD;;AAMA,QAAMM,YAAY,GAAG,MAAM;AACvBJ,IAAAA,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AAEAP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAJD;;AAKA,sBAAO,QAAC,WAAD,CAAa,QAAb;AACH,IAAA,KAAK,EAAI;AACLP,MAAAA,UAAU,EAAEA,UADP;AAELC,MAAAA,QAAQ,EAAEU,aAFL;AAGLT,MAAAA,OAAO,EAAEW;AAHJ,KADN;AAAA,cAONP,KAAK,CAACS;AAPA;AAAA;AAAA;AAAA;AAAA,UAAP;AASH,CA9BM;;GAAMV,mB;;KAAAA,mB;AAgCb,eAAeP,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AuthContext =  React.createContext({\r\n    isLoggedIn: false,\r\n    onLogout: () => {},\r\n    onLogin: (email, password) => {}\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn ] = useState(false); \r\n    \r\n    useEffect(() => {\r\n        const storedUserloogedInInformation = localStorage.getItem('isLoggedIn');\r\n        if (storedUserloogedInInformation === '1') {\r\n          setIsLoggedIn(true)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, []);\r\n    const logoutHandler = () => {\r\n        localStorage.removeItem('isLoggedIn')\r\n\r\n        setIsLoggedIn(false);\r\n    }\r\n\r\n    const loginHandler = () => {\r\n        localStorage.setItem('isLoggedIn', '1')\r\n\r\n        setIsLoggedIn(true);\r\n    }\r\n    return <AuthContext.Provider\r\n        value = {{\r\n            isLoggedIn: isLoggedIn,\r\n            onLogout: logoutHandler,\r\n            onLogin: loginHandler\r\n        }}\r\n    > \r\n    {props.children} \r\n    </AuthContext.Provider>\r\n}\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}