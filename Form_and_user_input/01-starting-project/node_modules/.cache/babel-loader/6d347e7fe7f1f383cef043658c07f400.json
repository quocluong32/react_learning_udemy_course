{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Quoc Luong\\\\Desktop\\\\udemy\\\\Form_and_user_input\\\\01-starting-project\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enterNameIsValid, setEnterNameIsValid] = useState(true);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (enteredName.trim() === '') {\n      setEnterNameIsValid(false);\n      return;\n    }\n\n    setEnterNameIsValid(true);\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n  };\n\n  const nameInputClasses = enterNameIsValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), !enterNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Input cannot be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"0BQ0cmCJMmMHck+sSE4HMyzy98I=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Users/Quoc Luong/Desktop/udemy/Form_and_user_input/01-starting-project/src/components/SimpleInput.js"],"names":["useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","enterNameIsValid","setEnterNameIsValid","nameInputChangeHandler","event","target","value","formSubmitHandler","preventDefault","trim","console","log","enteredValue","current","nameInputClasses"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,YAAY,GAAGJ,MAAM,EAA3B;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,IAAD,CAAxD;;AAEA,QAAMQ,sBAAsB,GAAGC,KAAK,IAAI;AACtCJ,IAAAA,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAGH,KAAK,IAAI;AACjCA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAIT,WAAW,CAACU,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BP,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACD;;AAEDA,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYZ,WAAZ;AACA,UAAMa,YAAY,GAAGd,YAAY,CAACe,OAAb,CAAqBP,KAA1C;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACD,GAZD;;AAcA,QAAME,gBAAgB,GAAGb,gBAAgB,GAAE,cAAF,GAAmB,sBAA5D;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAIM,iBAAlB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,GAAG,EAAET,YAAZ;AAA0B,QAAA,IAAI,EAAC,MAA/B;AAAsC,QAAA,EAAE,EAAC,MAAzC;AAAgD,QAAA,QAAQ,EAAEK,sBAA1D;AAAkF,QAAA,KAAK,EAAEJ;AAAzF;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,CAACE,gBAAD,iBAAqB;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCD;;GAAML,W;;KAAAA,W;AAuCN,eAAeA,WAAf","sourcesContent":["import { useRef, useState } from 'react';\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enterNameIsValid, setEnterNameIsValid] = useState(true);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (enteredName.trim() === '') {\n      setEnterNameIsValid(false);\n      return;\n    }\n\n    setEnterNameIsValid(true);\n\n    console.log(enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(enteredValue);\n  }\n\n  const nameInputClasses = enterNameIsValid? \"form-control\" : \"form-control invalid\"\n\n  return (\n    <form onSubmit = {formSubmitHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} type='text' id='name' onChange={nameInputChangeHandler} value={enteredName}/>\n        {!enterNameIsValid && <p className=\"error-text\">Input cannot be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}